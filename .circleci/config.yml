version: 2.1

executors:
  node:
    docker:
      - image: node:12
        user: node
  gcloud:
    docker:
      - image: google/cloud-sdk:alpine

commands:
  deploy-env:
    description: "Deploy to a specific environment"
    parameters:
      sa_key_var:
        type: string
      env:
        type: string
        default: "dev"
      pr:
        type: boolean
        default: false
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: cp config/<< parameters.env >>.json config.json
      - run: echo "$<< parameters.sa_key_var >>" > /tmp/sa.json
      - run: gcloud auth activate-service-account --key-file=/tmp/sa.json
      - run: gcloud app deploy --project=terra-bard-<< parameters.env >> --promote --quiet

jobs:
  build:
    executor: node
    steps:
      - checkout
      - restore_cache:
          key: 1-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - save_cache:
          key: 1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: yarn lint
      - run: yarn generate-docs
      - persist_to_workspace:
          root: .
          paths:
            - docs
            - node_modules
  deploy-dev:
    executor: gcloud
    steps: 
      - deploy-env:
          sa_key_var: "DEV_SA_KEY_JSON"
  deploy-alpha:
    executor: gcloud
    steps: 
      - deploy-env:
          sa_key_var: "ALPHA_SA_KEY_JSON"
          env: "alpha"
  deploy-staging:
    executor: gcloud
    steps: 
      - deploy-env:
          sa_key_var: "STAGING_SA_KEY_JSON"
          env: "staging"
  deploy-perf:
    executor: gcloud
    steps: 
      - deploy-env:
          sa_key_var: "PERF_SA_KEY_JSON"
          env: "perf"
workflows:
  version: 2
  build-deploy: 
    jobs: 
      - build
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-alpha:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-perf:
          requires:
            - build
          filters:
            branches:
              only: master
                         
